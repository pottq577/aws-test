name: CI/CD Pipeline to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew clean build --no-build-cache -x test # -x test: 테스트 하지 않음

      - name: Check JAR contents (for templates)
        run: |
          unzip -l build/libs/aws-test-0.0.1-SNAPSHOT.jar | grep templates

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to Docker Hub
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/aws-test
        run: |
          echo "IMAGE_NAME: $IMAGE_NAME"
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Download current task definition
        run: |
          aws ecs describe-task-definition --task-definition sparta-tigers-task \
          --query "taskDefinition" > task-definition.json

      - name: Replace image URI in task definition
        run: |
          export IMAGE_URI=${{ secrets.DOCKER_USERNAME }}/aws-test:latest
          cat task-definition.json \
          | jq '.containerDefinitions[0].image = env.IMAGE_URI' \
          | jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' \
          > new-task-definition.json

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: new-task-definition.json
          service: sparta-tigers-task-service
          cluster: sparta-tigers-cluster
          wait-for-service-stability: true